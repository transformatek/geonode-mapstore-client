(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[60],{81965:(r,e,t)=>{"use strict";t.d(e,{Z:()=>o});var n=t(29346);const o=function(r){(0,n.jx)(r);var e=Number(r[0]),t=Number(r[1]),o=Number(r[2]),i=Number(r[3]);if(6===r.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var a=[e,t],s=[e,i],u=[o,i],h=[o,t];return(0,n.yu)([[a,h,u,s,a]])}},75878:(r,e,t)=>{"use strict";t.d(e,{Z:()=>c});var n=t(97363);function o(r,e,t){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var o=0,i=e.length-1;o<e.length;i=o++){var a=e[o][0],s=e[o][1],u=e[i][0],h=e[i][1];if(r[1]*(a-u)+s*(u-r[0])+h*(r[0]-a)==0&&(a-r[0])*(u-r[0])<=0&&(s-r[1])*(h-r[1])<=0)return!t;s>r[1]!=h>r[1]&&r[0]<(u-a)*(r[1]-s)/(h-s)+a&&(n=!n)}return n}const i=function(r,e,t){if("object"!=typeof(t=t||{}))throw new Error("options is invalid");var i=t.ignoreBoundary;if(!r)throw new Error("point is required");if(!e)throw new Error("polygon is required");var a=(0,n.c9)(r),s=(0,n.r7)(e),u=e.geometry?e.geometry.type:e.type,h=e.bbox;if(h&&!1===function(r,e){return e[0]<=r[0]&&e[1]<=r[1]&&e[2]>=r[0]&&e[3]>=r[1]}(a,h))return!1;"Polygon"===u&&(s=[s]);for(var l=0,c=!1;l<s.length&&!c;l++)if(o(a,s[l][0],i)){for(var f=!1,m=1;m<s[l].length&&!f;)o(a,s[l][m],!i)&&(f=!0),m++;f||(c=!0)}return c};function a(r,e,t){if(null!==r)for(var n,o,i,s,u,h,l,c,f=0,m=0,d=r.type,g="FeatureCollection"===d,p="Feature"===d,y=g?r.features.length:1,w=0;w<y;w++){u=(c=!!(l=g?r.features[w].geometry:p?r.geometry:r)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var v=0;v<u;v++){var b=0,x=0;if(null!==(s=c?l.geometries[v]:l)){h=s.coordinates;var M=s.type;switch(f=!t||"Polygon"!==M&&"MultiPolygon"!==M?0:1,M){case null:break;case"Point":if(!1===e(h,m,w,b,x))return!1;m++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<h.length;n++){if(!1===e(h[n],m,w,b,x))return!1;m++,"MultiPoint"===M&&b++}"LineString"===M&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<h.length;n++){for(o=0;o<h[n].length-f;o++){if(!1===e(h[n][o],m,w,b,x))return!1;m++}"MultiLineString"===M&&b++,"Polygon"===M&&x++}"Polygon"===M&&b++;break;case"MultiPolygon":for(n=0;n<h.length;n++){for("MultiPolygon"===M&&(x=0),o=0;o<h[n].length;o++){for(i=0;i<h[n][o].length-f;i++){if(!1===e(h[n][o][i],m,w,b,x))return!1;m++}x++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===a(s.geometries[n],e,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}t(29346);const s=function(r){var e=[1/0,1/0,-1/0,-1/0];return a(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e};var u=t(31662);function h(r,e){return!(r[0]>e[0]||r[2]<e[2]||r[1]>e[1]||r[3]<e[3])}function l(r,e){return r[0]===e[0]&&r[1]===e[1]}const c=function(r,e){var t=(0,n.oL)(r),o=(0,n.oL)(e),a=(0,n.wA)(r),c=(0,n.wA)(e),f=(0,n.r7)(r),m=(0,n.r7)(e);switch(t){case"Point":switch(o){case"Point":return l(f,m);default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPoint":switch(o){case"Point":return function(r,e){var t,n=!1;for(t=0;t<r.coordinates.length;t++)if(l(r.coordinates[t],e.coordinates)){n=!0;break}return n}(a,c);case"MultiPoint":return function(r,e){for(var t=0;t<e.coordinates.length;t++){for(var n=!1,o=0;o<r.coordinates.length;o++)if(l(e.coordinates[t],r.coordinates[o])){n=!0;break}if(!n)return!1}return!0}(a,c);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"Point":return(0,u.Z)(c,a,{ignoreEndVertices:!0});case"LineString":return function(r,e){for(var t=!1,n=0;n<e.coordinates.length;n++)if((0,u.Z)({type:"Point",coordinates:e.coordinates[n]},r,{ignoreEndVertices:!0})&&(t=!0),!(0,u.Z)({type:"Point",coordinates:e.coordinates[n]},r,{ignoreEndVertices:!1}))return!1;return t}(a,c);case"MultiPoint":return function(r,e){for(var t=!1,n=0;n<e.coordinates.length;n++)if((0,u.Z)(e.coordinates[n],r,{ignoreEndVertices:!0})&&(t=!0),!(0,u.Z)(e.coordinates[n],r))return!1;return!!t}(a,c);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"Point":return i(c,a,{ignoreBoundary:!0});case"LineString":return function(r,e){var t,n,o=!1,a=0;if(!h(s(r),s(e)))return!1;for(;a<e.coordinates.length-1;a++){var u=(t=e.coordinates[a],n=e.coordinates[a+1],[(t[0]+n[0])/2,(t[1]+n[1])/2]);if(i({type:"Point",coordinates:u},r,{ignoreBoundary:!0})){o=!0;break}}return o}(a,c);case"Polygon":return function(r,e){if(!h(s(r),s(e)))return!1;for(var t=0;t<e.coordinates[0].length;t++)if(!i(e.coordinates[0][t],r))return!1;return!0}(a,c);case"MultiPoint":return function(r,e){for(var t=0;t<e.coordinates.length;t++)if(!i(e.coordinates[t],r,{ignoreBoundary:!0}))return!1;return!0}(a,c);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+t+" geometry not supported")}}},23580:(r,e,t)=>{"use strict";t.d(e,{Z:()=>Gr});var n=t(29346);function o(r,e,t){if(null!==r)for(var n,i,a,s,u,h,l,c,f=0,m=0,d=r.type,g="FeatureCollection"===d,p="Feature"===d,y=g?r.features.length:1,w=0;w<y;w++){u=(c=!!(l=g?r.features[w].geometry:p?r.geometry:r)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var v=0;v<u;v++){var b=0,x=0;if(null!==(s=c?l.geometries[v]:l)){h=s.coordinates;var M=s.type;switch(f=!t||"Polygon"!==M&&"MultiPolygon"!==M?0:1,M){case null:break;case"Point":if(!1===e(h,m,w,b,x))return!1;m++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<h.length;n++){if(!1===e(h[n],m,w,b,x))return!1;m++,"MultiPoint"===M&&b++}"LineString"===M&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<h.length;n++){for(i=0;i<h[n].length-f;i++){if(!1===e(h[n][i],m,w,b,x))return!1;m++}"MultiLineString"===M&&b++,"Polygon"===M&&x++}"Polygon"===M&&b++;break;case"MultiPolygon":for(n=0;n<h.length;n++){for("MultiPolygon"===M&&(x=0),i=0;i<h[n].length;i++){for(a=0;a<h[n][i].length-f;a++){if(!1===e(h[n][i][a],m,w,b,x))return!1;m++}x++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===o(s.geometries[n],e,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length&&!1!==e(r.features[t],t);t++);}function a(r){var e=[];return o(r,(function(r){e.push(r)})),e}function s(r,e){!function(r,e){var t,n,o,i,a,s,u,h,l,c,f=0,m="FeatureCollection"===r.type,d="Feature"===r.type,g=m?r.features.length:1;for(t=0;t<g;t++){for(s=m?r.features[t].geometry:d?r.geometry:r,h=m?r.features[t].properties:d?r.properties:{},l=m?r.features[t].bbox:d?r.bbox:void 0,c=m?r.features[t].id:d?r.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,f,h,l,c))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],f,h,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,f,h,l,c))return!1;f++}}(r,(function(r,t,o,i,a){var s,u=null===r?null:r.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==e((0,n.zL)(r,o,{bbox:i,id:a}),t,0)&&void 0}switch(u){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var h=0;h<r.coordinates.length;h++){var l={type:s,coordinates:r.coordinates[h]};if(!1===e((0,n.zL)(l,o),t,h))return!1}}))}function u(r,e){s(r,(function(r,t,i){var a=0;if(r.geometry){var s,u=r.geometry.type;if("Point"!==u&&"MultiPoint"!==u)return!1!==o(r,(function(o,u,h,l,c){if(void 0!==s){var f=(0,n.Tu)([s,o],r.properties);if(!1===e(f,t,i,c,a))return!1;a++,s=o}else s=o}))&&void 0}}))}var h=t(97363);function l(r,e,t,n,o){for(;n>t;){if(n-t>600){var i=n-t+1,a=e-t+1,s=Math.log(i),u=.5*Math.exp(2*s/3),h=.5*Math.sqrt(s*u*(i-u)/i)*(a-i/2<0?-1:1);l(r,e,Math.max(t,Math.floor(e-a*u/i+h)),Math.min(n,Math.floor(e+(i-a)*u/i+h)),o)}var f=r[e],m=t,d=n;for(c(r,t,e),o(r[n],f)>0&&c(r,t,n);m<d;){for(c(r,m,d),m++,d--;o(r[m],f)<0;)m++;for(;o(r[d],f)>0;)d--}0===o(r[t],f)?c(r,t,d):c(r,++d,n),d<=e&&(t=d+1),e<=d&&(n=d-1)}}function c(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function f(r,e){return r<e?-1:r>e?1:0}const m=function(r,e,t,n,o){l(r,e,t||0,n||r.length-1,o||f)};function d(r,e){if(!(this instanceof d))return new d(r,e);this._maxEntries=Math.max(4,r||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function g(r,e,t){if(!t)return e.indexOf(r);for(var n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function p(r,e){y(r,0,r.children.length,e,r)}function y(r,e,t,n,o){o||(o=B(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<t;a++)i=r.children[a],w(o,r.leaf?n(i):i);return o}function w(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function v(r,e){return r.minX-e.minX}function b(r,e){return r.minY-e.minY}function x(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function M(r){return r.maxX-r.minX+(r.maxY-r.minY)}function E(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function P(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function B(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function S(r,e,t,n,o){for(var i,a=[e,t];a.length;)(t=a.pop())-(e=a.pop())<=n||(i=e+Math.ceil((t-e)/n/2)*n,m(r,i,e,t,o),a.push(e,i,i,t))}d.prototype={all:function(){return this._all(this.data,[])},search:function(r){var e=this.data,t=[],n=this.toBBox;if(!P(r,e))return t;for(var o,i,a,s,u=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],P(r,s=e.leaf?n(a):a)&&(e.leaf?t.push(a):E(r,s)?this._all(a,t):u.push(a));e=u.pop()}return t},collides:function(r){var e=this.data,t=this.toBBox;if(!P(r,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],P(r,a=e.leaf?t(i):i)){if(e.leaf||E(r,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(r){if(!r||!r.length)return this;if(r.length<this._minEntries){for(var e=0,t=r.length;e<t;e++)this.insert(r[e]);return this}var n=this._build(r.slice(),0,r.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(r){return r&&this._insert(r,this.data.height-1),this},clear:function(){return this.data=B([]),this},remove:function(r,e){if(!r)return this;for(var t,n,o,i,a=this.data,s=this.toBBox(r),u=[],h=[];a||u.length;){if(a||(a=u.pop(),n=u[u.length-1],t=h.pop(),i=!0),a.leaf&&-1!==(o=g(r,a.children,e)))return a.children.splice(o,1),u.push(a),this._condense(u),this;i||a.leaf||!E(a,s)?n?(t++,a=n.children[t],i=!1):a=null:(u.push(a),h.push(t),t=0,n=a,a=a.children[0])}return this},toBBox:function(r){return r},compareMinX:v,compareMinY:b,toJSON:function(){return this.data},fromJSON:function(r){return this.data=r,this},_all:function(r,e){for(var t=[];r;)r.leaf?e.push.apply(e,r.children):t.push.apply(t,r.children),r=t.pop();return e},_build:function(r,e,t,n){var o,i=t-e+1,a=this._maxEntries;if(i<=a)return p(o=B(r.slice(e,t+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,n-1))),(o=B([])).leaf=!1,o.height=n;var s,u,h,l,c=Math.ceil(i/a),f=c*Math.ceil(Math.sqrt(a));for(S(r,e,t,f,this.compareMinX),s=e;s<=t;s+=f)for(S(r,s,h=Math.min(s+f-1,t),c,this.compareMinY),u=s;u<=h;u+=c)l=Math.min(u+c-1,h),o.children.push(this._build(r,u,l,n-1));return p(o,this.toBBox),o},_chooseSubtree:function(r,e,t,n){for(var o,i,a,s,u,h,l,c,f,m;n.push(e),!e.leaf&&n.length-1!==t;){for(l=c=1/0,o=0,i=e.children.length;o<i;o++)u=x(a=e.children[o]),f=r,m=a,(h=(Math.max(m.maxX,f.maxX)-Math.min(m.minX,f.minX))*(Math.max(m.maxY,f.maxY)-Math.min(m.minY,f.minY))-u)<c?(c=h,l=u<l?u:l,s=a):h===c&&u<l&&(l=u,s=a);e=s||e.children[0]}return e},_insert:function(r,e,t){var n=this.toBBox,o=t?r:n(r),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(r),w(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(r,e){var t=r[e],n=t.children.length,o=this._minEntries;this._chooseSplitAxis(t,o,n);var i=this._chooseSplitIndex(t,o,n),a=B(t.children.splice(i,t.children.length-i));a.height=t.height,a.leaf=t.leaf,p(t,this.toBBox),p(a,this.toBBox),e?r[e-1].children.push(a):this._splitRoot(t,a)},_splitRoot:function(r,e){this.data=B([r,e]),this.data.height=r.height+1,this.data.leaf=!1,p(this.data,this.toBBox)},_chooseSplitIndex:function(r,e,t){var n,o,i,a,s,u,h,l,c,f,m,d,g,p;for(u=h=1/0,n=e;n<=t-e;n++)c=o=y(r,0,n,this.toBBox),f=i=y(r,n,t,this.toBBox),void 0,void 0,void 0,void 0,m=Math.max(c.minX,f.minX),d=Math.max(c.minY,f.minY),g=Math.min(c.maxX,f.maxX),p=Math.min(c.maxY,f.maxY),a=Math.max(0,g-m)*Math.max(0,p-d),s=x(o)+x(i),a<u?(u=a,l=n,h=s<h?s:h):a===u&&s<h&&(h=s,l=n);return l},_chooseSplitAxis:function(r,e,t){var n=r.leaf?this.compareMinX:v,o=r.leaf?this.compareMinY:b;this._allDistMargin(r,e,t,n)<this._allDistMargin(r,e,t,o)&&r.children.sort(n)},_allDistMargin:function(r,e,t,n){r.children.sort(n);var o,i,a=this.toBBox,s=y(r,0,e,a),u=y(r,t-e,t,a),h=M(s)+M(u);for(o=e;o<t-e;o++)i=r.children[o],w(s,r.leaf?a(i):i),h+=M(s);for(o=t-e-1;o>=e;o--)i=r.children[o],w(u,r.leaf?a(i):i),h+=M(u);return h},_adjustParentBBoxes:function(r,e,t){for(var n=t;n>=0;n--)w(e[n],r)},_condense:function(r){for(var e,t=r.length-1;t>=0;t--)0===r[t].children.length?t>0?(e=r[t-1].children).splice(e.indexOf(r[t]),1):this.clear():p(r[t],this.toBBox)},_initFormat:function(r){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(r[0])),this.compareMinY=new Function("a","b",e.join(r[1])),this.toBBox=new Function("a","return {minX: a"+r[0]+", minY: a"+r[1]+", maxX: a"+r[2]+", maxY: a"+r[3]+"};")}};const A=d;function X(r,e,t){if(null!==r)for(var n,o,i,a,s,u,h,l,c=0,f=0,m=r.type,d="FeatureCollection"===m,g="Feature"===m,p=d?r.features.length:1,y=0;y<p;y++){s=(l=!!(h=d?r.features[y].geometry:g?r.geometry:r)&&"GeometryCollection"===h.type)?h.geometries.length:1;for(var w=0;w<s;w++){var v=0,b=0;if(null!==(a=l?h.geometries[w]:h)){u=a.coordinates;var x=a.type;switch(c=!t||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":if(!1===e(u,f,y,v,b))return!1;f++,v++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(!1===e(u[n],f,y,v,b))return!1;f++,"MultiPoint"===x&&v++}"LineString"===x&&v++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(o=0;o<u[n].length-c;o++){if(!1===e(u[n][o],f,y,v,b))return!1;f++}"MultiLineString"===x&&v++,"Polygon"===x&&b++}"Polygon"===x&&v++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for("MultiPolygon"===x&&(b=0),o=0;o<u[n].length;o++){for(i=0;i<u[n][o].length-c;i++){if(!1===e(u[n][o][i],f,y,v,b))return!1;f++}b++}v++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===X(a.geometries[n],e,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function Y(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length&&!1!==e(r.features[t],t);t++);}function _(r,e){!function(r,e){var t,n,o,i,a,s,u,h,l,c,f=0,m="FeatureCollection"===r.type,d="Feature"===r.type,g=m?r.features.length:1;for(t=0;t<g;t++){for(s=m?r.features[t].geometry:d?r.geometry:r,h=m?r.features[t].properties:d?r.properties:{},l=m?r.features[t].bbox:d?r.bbox:void 0,c=m?r.features[t].id:d?r.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,f,h,l,c))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],f,h,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,f,h,l,c))return!1;f++}}(r,(function(r,t,o,i,a){var s,u=null===r?null:r.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==e((0,n.zL)(r,o,{bbox:i,id:a}),t,0)&&void 0}switch(u){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var h=0;h<r.coordinates.length;h++){var l={type:s,coordinates:r.coordinates[h]};if(!1===e((0,n.zL)(l,o),t,h))return!1}}))}function F(r){var e=[r[0],r[1]],t=[r[0],r[3]],n=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[e,[r[2],r[1]],n,t,e]]}}}function k(r){var e=[1/0,1/0,-1/0,-1/0];return X(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}const C=function r(e,t,o){if(o=o||{},!(0,n.Kn)(o))throw new Error("options is invalid");if(!0===o.final)return function(e,t){var n=r(t,e);return(n+180)%360}(e,t);var i=(0,h.c9)(e),a=(0,h.c9)(t),s=(0,n.Ht)(i[0]),u=(0,n.Ht)(a[0]),l=(0,n.Ht)(i[1]),c=(0,n.Ht)(a[1]),f=Math.sin(u-s)*Math.cos(c),m=Math.cos(l)*Math.sin(c)-Math.sin(l)*Math.cos(c)*Math.cos(u-s);return(0,n.vi)(Math.atan2(f,m))},L=function(r,e,t){if(t=t||{},!(0,n.Kn)(t))throw new Error("options is invalid");var o=t.units,i=(0,h.c9)(r),a=(0,h.c9)(e),s=(0,n.Ht)(a[1]-i[1]),u=(0,n.Ht)(a[0]-i[0]),l=(0,n.Ht)(i[1]),c=(0,n.Ht)(a[1]),f=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(u/2),2)*Math.cos(l)*Math.cos(c);return(0,n.DL)(2*Math.atan2(Math.sqrt(f),Math.sqrt(1-f)),o)},q=function(r,e,t,o){if(o=o||{},!(0,n.Kn)(o))throw new Error("options is invalid");var i=o.units,a=o.properties,s=(0,h.c9)(r),u=(0,n.Ht)(s[0]),l=(0,n.Ht)(s[1]),c=(0,n.Ht)(t),f=(0,n.lF)(e,i),m=Math.asin(Math.sin(l)*Math.cos(f)+Math.cos(l)*Math.sin(f)*Math.cos(c)),d=u+Math.atan2(Math.sin(c)*Math.sin(f)*Math.cos(l),Math.cos(f)-Math.sin(l)*Math.sin(m)),g=(0,n.vi)(d),p=(0,n.vi)(m);return(0,n.xm)([g,p],a)};function N(r,e,t,n,o){for(;n>t;){if(n-t>600){var i=n-t+1,a=e-t+1,s=Math.log(i),u=.5*Math.exp(2*s/3),h=.5*Math.sqrt(s*u*(i-u)/i)*(a-i/2<0?-1:1);N(r,e,Math.max(t,Math.floor(e-a*u/i+h)),Math.min(n,Math.floor(e+(i-a)*u/i+h)),o)}var l=r[e],c=t,f=n;for(j(r,t,e),o(r[n],l)>0&&j(r,t,n);c<f;){for(j(r,c,f),c++,f--;o(r[c],l)<0;)c++;for(;o(r[f],l)>0;)f--}0===o(r[t],l)?j(r,t,f):j(r,++f,n),f<=e&&(t=f+1),e<=f&&(n=f-1)}}function j(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function O(r,e){return r<e?-1:r>e?1:0}const R=function(r,e,t,n,o){N(r,e,t||0,n||r.length-1,o||O)};function I(r,e){if(!(this instanceof I))return new I(r,e);this._maxEntries=Math.max(4,r||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function T(r,e,t){if(!t)return e.indexOf(r);for(var n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function G(r,e){D(r,0,r.children.length,e,r)}function D(r,e,t,n,o){o||(o=Q(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<t;a++)i=r.children[a],J(o,r.leaf?n(i):i);return o}function J(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function Z(r,e){return r.minX-e.minX}function z(r,e){return r.minY-e.minY}function H(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function U(r){return r.maxX-r.minX+(r.maxY-r.minY)}function K(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function V(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function Q(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function W(r,e,t,n,o){for(var i,a=[e,t];a.length;)(t=a.pop())-(e=a.pop())<=n||(i=e+Math.ceil((t-e)/n/2)*n,R(r,i,e,t,o),a.push(e,i,i,t))}I.prototype={all:function(){return this._all(this.data,[])},search:function(r){var e=this.data,t=[],n=this.toBBox;if(!V(r,e))return t;for(var o,i,a,s,u=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],V(r,s=e.leaf?n(a):a)&&(e.leaf?t.push(a):K(r,s)?this._all(a,t):u.push(a));e=u.pop()}return t},collides:function(r){var e=this.data,t=this.toBBox;if(!V(r,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],V(r,a=e.leaf?t(i):i)){if(e.leaf||K(r,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(r){if(!r||!r.length)return this;if(r.length<this._minEntries){for(var e=0,t=r.length;e<t;e++)this.insert(r[e]);return this}var n=this._build(r.slice(),0,r.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(r){return r&&this._insert(r,this.data.height-1),this},clear:function(){return this.data=Q([]),this},remove:function(r,e){if(!r)return this;for(var t,n,o,i,a=this.data,s=this.toBBox(r),u=[],h=[];a||u.length;){if(a||(a=u.pop(),n=u[u.length-1],t=h.pop(),i=!0),a.leaf&&-1!==(o=T(r,a.children,e)))return a.children.splice(o,1),u.push(a),this._condense(u),this;i||a.leaf||!K(a,s)?n?(t++,a=n.children[t],i=!1):a=null:(u.push(a),h.push(t),t=0,n=a,a=a.children[0])}return this},toBBox:function(r){return r},compareMinX:Z,compareMinY:z,toJSON:function(){return this.data},fromJSON:function(r){return this.data=r,this},_all:function(r,e){for(var t=[];r;)r.leaf?e.push.apply(e,r.children):t.push.apply(t,r.children),r=t.pop();return e},_build:function(r,e,t,n){var o,i=t-e+1,a=this._maxEntries;if(i<=a)return G(o=Q(r.slice(e,t+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,n-1))),(o=Q([])).leaf=!1,o.height=n;var s,u,h,l,c=Math.ceil(i/a),f=c*Math.ceil(Math.sqrt(a));for(W(r,e,t,f,this.compareMinX),s=e;s<=t;s+=f)for(W(r,s,h=Math.min(s+f-1,t),c,this.compareMinY),u=s;u<=h;u+=c)l=Math.min(u+c-1,h),o.children.push(this._build(r,u,l,n-1));return G(o,this.toBBox),o},_chooseSubtree:function(r,e,t,n){for(var o,i,a,s,u,h,l,c,f,m;n.push(e),!e.leaf&&n.length-1!==t;){for(l=c=1/0,o=0,i=e.children.length;o<i;o++)u=H(a=e.children[o]),f=r,m=a,(h=(Math.max(m.maxX,f.maxX)-Math.min(m.minX,f.minX))*(Math.max(m.maxY,f.maxY)-Math.min(m.minY,f.minY))-u)<c?(c=h,l=u<l?u:l,s=a):h===c&&u<l&&(l=u,s=a);e=s||e.children[0]}return e},_insert:function(r,e,t){var n=this.toBBox,o=t?r:n(r),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(r),J(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(r,e){var t=r[e],n=t.children.length,o=this._minEntries;this._chooseSplitAxis(t,o,n);var i=this._chooseSplitIndex(t,o,n),a=Q(t.children.splice(i,t.children.length-i));a.height=t.height,a.leaf=t.leaf,G(t,this.toBBox),G(a,this.toBBox),e?r[e-1].children.push(a):this._splitRoot(t,a)},_splitRoot:function(r,e){this.data=Q([r,e]),this.data.height=r.height+1,this.data.leaf=!1,G(this.data,this.toBBox)},_chooseSplitIndex:function(r,e,t){var n,o,i,a,s,u,h,l,c,f,m,d,g,p;for(u=h=1/0,n=e;n<=t-e;n++)c=o=D(r,0,n,this.toBBox),f=i=D(r,n,t,this.toBBox),void 0,void 0,void 0,void 0,m=Math.max(c.minX,f.minX),d=Math.max(c.minY,f.minY),g=Math.min(c.maxX,f.maxX),p=Math.min(c.maxY,f.maxY),a=Math.max(0,g-m)*Math.max(0,p-d),s=H(o)+H(i),a<u?(u=a,l=n,h=s<h?s:h):a===u&&s<h&&(h=s,l=n);return l},_chooseSplitAxis:function(r,e,t){var n=r.leaf?this.compareMinX:Z,o=r.leaf?this.compareMinY:z;this._allDistMargin(r,e,t,n)<this._allDistMargin(r,e,t,o)&&r.children.sort(n)},_allDistMargin:function(r,e,t,n){r.children.sort(n);var o,i,a=this.toBBox,s=D(r,0,e,a),u=D(r,t-e,t,a),h=U(s)+U(u);for(o=e;o<t-e;o++)i=r.children[o],J(s,r.leaf?a(i):i),h+=U(s);for(o=t-e-1;o>=e;o--)i=r.children[o],J(u,r.leaf?a(i):i),h+=U(u);return h},_adjustParentBBoxes:function(r,e,t){for(var n=t;n>=0;n--)J(e[n],r)},_condense:function(r){for(var e,t=r.length-1;t>=0;t--)0===r[t].children.length?t>0?(e=r[t-1].children).splice(e.indexOf(r[t]),1):this.clear():G(r[t],this.toBBox)},_initFormat:function(r){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(r[0])),this.compareMinY=new Function("a","b",e.join(r[1])),this.toBBox=new Function("a","return {minX: a"+r[0]+", minY: a"+r[1]+", maxX: a"+r[2]+", maxY: a"+r[3]+"};")}};const $=I;function rr(r,e,t){if(null!==r)for(var n,o,i,a,s,u,h,l,c=0,f=0,m=r.type,d="FeatureCollection"===m,g="Feature"===m,p=d?r.features.length:1,y=0;y<p;y++){s=(l=!!(h=d?r.features[y].geometry:g?r.geometry:r)&&"GeometryCollection"===h.type)?h.geometries.length:1;for(var w=0;w<s;w++){var v=0,b=0;if(null!==(a=l?h.geometries[w]:h)){u=a.coordinates;var x=a.type;switch(c=!t||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":if(!1===e(u,f,y,v,b))return!1;f++,v++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(!1===e(u[n],f,y,v,b))return!1;f++,"MultiPoint"===x&&v++}"LineString"===x&&v++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(o=0;o<u[n].length-c;o++){if(!1===e(u[n][o],f,y,v,b))return!1;f++}"MultiLineString"===x&&v++,"Polygon"===x&&b++}"Polygon"===x&&v++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for("MultiPolygon"===x&&(b=0),o=0;o<u[n].length;o++){for(i=0;i<u[n][o].length-c;i++){if(!1===e(u[n][o][i],f,y,v,b))return!1;f++}b++}v++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===rr(a.geometries[n],e,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function er(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length&&!1!==e(r.features[t],t);t++);}function tr(r,e){!function(r,e){var t,n,o,i,a,s,u,h,l,c,f=0,m="FeatureCollection"===r.type,d="Feature"===r.type,g=m?r.features.length:1;for(t=0;t<g;t++){for(s=m?r.features[t].geometry:d?r.geometry:r,h=m?r.features[t].properties:d?r.properties:{},l=m?r.features[t].bbox:d?r.bbox:void 0,c=m?r.features[t].id:d?r.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,f,h,l,c))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],f,h,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,f,h,l,c))return!1;f++}}(r,(function(r,t,o,i,a){var s,u=null===r?null:r.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==e((0,n.zL)(r,o,{bbox:i,id:a}),t,0)&&void 0}switch(u){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var h=0;h<r.coordinates.length;h++){var l={type:s,coordinates:r.coordinates[h]};if(!1===e((0,n.zL)(l,o),t,h))return!1}}))}function nr(r){var e=[r[0],r[1]],t=[r[0],r[3]],n=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[e,[r[2],r[1]],n,t,e]]}}}function or(r){var e=[1/0,1/0,-1/0,-1/0];return rr(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}const ir=function(r){if(!r)throw new Error("geojson is required");var e=[];return tr(r,(function(r){!function(r,e){var t=[],o=r.geometry;switch(o.type){case"Polygon":t=(0,h.r7)(o);break;case"LineString":t=[(0,h.r7)(o)]}t.forEach((function(t){(function(r,e){var t=[];return r.reduce((function(r,o){var i,a,s,u,h,l,c=(0,n.Tu)([r,o],e);return c.bbox=(a=o,s=(i=r)[0],u=i[1],[s<(h=a[0])?s:h,u<(l=a[1])?u:l,s>h?s:h,u>l?u:l]),t.push(c),o})),t})(t,r.properties).forEach((function(r){r.id=e.length,e.push(r)}))}))}(r,e)})),(0,n.uf)(e)};function ar(r,e){var t=(0,h.r7)(r),o=(0,h.r7)(e);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==o.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=t[0][0],a=t[0][1],s=t[1][0],u=t[1][1],l=o[0][0],c=o[0][1],f=o[1][0],m=o[1][1],d=(m-c)*(s-i)-(f-l)*(u-a);if(0===d)return null;var g=((f-l)*(a-c)-(m-c)*(i-l))/d,p=((s-i)*(a-c)-(u-a)*(i-l))/d;if(g>=0&&g<=1&&p>=0&&p<=1){var y=i+g*(s-i),w=a+g*(u-a);return(0,n.xm)([y,w])}return null}const sr=function(r,e){var t={},o=[];if("LineString"===r.type&&(r=(0,n.zL)(r)),"LineString"===e.type&&(e=(0,n.zL)(e)),"Feature"===r.type&&"Feature"===e.type&&"LineString"===r.geometry.type&&"LineString"===e.geometry.type&&2===r.geometry.coordinates.length&&2===e.geometry.coordinates.length){var i=ar(r,e);return i&&o.push(i),(0,n.uf)(o)}var a=function(r){var e=$(r);return e.insert=function(r){if(Array.isArray(r)){var e=r;(r=nr(e)).bbox=e}else r.bbox=r.bbox?r.bbox:or(r);return $.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach((function(r){var t=nr(r);t.bbox=r,e.push(t)})):er(r,(function(r){r.bbox=r.bbox?r.bbox:or(r),e.push(r)})),$.prototype.load.call(this,e)},e.remove=function(r){if(Array.isArray(r)){var e=r;(r=nr(e)).bbox=e}return $.prototype.remove.call(this,r)},e.clear=function(){return $.prototype.clear.call(this)},e.search=function(r){return{type:"FeatureCollection",features:$.prototype.search.call(this,this.toBBox(r))}},e.collides=function(r){return $.prototype.collides.call(this,this.toBBox(r))},e.all=function(){return{type:"FeatureCollection",features:$.prototype.all.call(this)}},e.toJSON=function(){return $.prototype.toJSON.call(this)},e.fromJSON=function(r){return $.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;return{minX:(e=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:or(r))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}();return a.load(ir(e)),er(ir(r),(function(r){er(a.search(r),(function(e){var n=ar(r,e);if(n){var i=(0,h.r7)(n).join(",");t[i]||(t[i]=!0,o.push(n))}}))})),(0,n.uf)(o)},ur=function(r,e,t){if(t=t||{},!(0,n.Kn)(t))throw new Error("options is invalid");var o=r.geometry?r.geometry.type:r.type;if("LineString"!==o&&"MultiLineString"!==o)throw new Error("lines must be LineString or MultiLineString");var i=(0,n.xm)([1/0,1/0],{dist:1/0}),a=0;return tr(r,(function(r){for(var o=(0,h.r7)(r),s=0;s<o.length-1;s++){var u=(0,n.xm)(o[s]);u.properties.dist=L(e,u,t);var l=(0,n.xm)(o[s+1]);l.properties.dist=L(e,l,t);var c=L(u,l,t),f=Math.max(u.properties.dist,l.properties.dist),m=C(u,l),d=q(e,f,m+90,t),g=q(e,f,m-90,t),p=sr((0,n.Tu)([d.geometry.coordinates,g.geometry.coordinates]),(0,n.Tu)([u.geometry.coordinates,l.geometry.coordinates])),y=null;p.features.length>0&&((y=p.features[0]).properties.dist=L(e,y,t),y.properties.location=a+L(u,y,t)),u.properties.dist<i.properties.dist&&((i=u).properties.index=s,i.properties.location=a),l.properties.dist<i.properties.dist&&((i=l).properties.index=s+1,i.properties.location=a+c),y&&y.properties.dist<i.properties.dist&&((i=y).properties.index=s),a+=c}})),i};var hr=t(31662),lr=Array.prototype.slice;function cr(r){return"[object Arguments]"===Object.prototype.toString.call(r)}function fr(r,e,t){return t||(t={}),r===e||(r instanceof Date&&e instanceof Date?r.getTime()===e.getTime():!r||!e||"object"!=typeof r&&"object"!=typeof e?(t.strict,r===e):function(r,e,t){var n,o;if(mr(r)||mr(e))return!1;if(r.prototype!==e.prototype)return!1;if(cr(r))return!!cr(e)&&fr(r=lr.call(r),e=lr.call(e),t);if(dr(r)){if(!dr(e))return!1;if(r.length!==e.length)return!1;for(n=0;n<r.length;n++)if(r[n]!==e[n])return!1;return!0}try{var i=Object.keys(r),a=Object.keys(e)}catch(r){return!1}if(i.length!==a.length)return!1;for(i.sort(),a.sort(),n=i.length-1;n>=0;n--)if(i[n]!==a[n])return!1;for(n=i.length-1;n>=0;n--)if(!fr(r[o=i[n]],e[o],t))return!1;return typeof r==typeof e}(r,e,t))}function mr(r){return null==r}function dr(r){return!(!r||"object"!=typeof r||"number"!=typeof r.length||"function"!=typeof r.copy||"function"!=typeof r.slice||r.length>0&&"number"!=typeof r[0])}function gr(r,e){var t=(0,h.r7)(e),n=(0,h.r7)(r),o=n[0],i=n[n.length-1],a=r.geometry.coordinates;return fr(t[0],o)?a.unshift(t[1]):fr(t[0],i)?a.push(t[1]):fr(t[1],o)?a.unshift(t[0]):fr(t[1],i)&&a.push(t[0]),r}const pr=function(r,e,t){if(t=t||{},!(0,n.Kn)(t))throw new Error("options is invalid");var o,i,a=t.tolerance||0,s=[],u=function(r){var e=A(r);return e.insert=function(r){if(Array.isArray(r)){var e=r;(r=F(e)).bbox=e}else r.bbox=r.bbox?r.bbox:k(r);return A.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach((function(r){var t=F(r);t.bbox=r,e.push(t)})):Y(r,(function(r){r.bbox=r.bbox?r.bbox:k(r),e.push(r)})),A.prototype.load.call(this,e)},e.remove=function(r){if(Array.isArray(r)){var e=r;(r=F(e)).bbox=e}return A.prototype.remove.call(this,r)},e.clear=function(){return A.prototype.clear.call(this)},e.search=function(r){return{type:"FeatureCollection",features:A.prototype.search.call(this,this.toBBox(r))}},e.collides=function(r){return A.prototype.collides.call(this,this.toBBox(r))},e.all=function(){return{type:"FeatureCollection",features:A.prototype.all.call(this)}},e.toJSON=function(){return A.prototype.toJSON.call(this)},e.fromJSON=function(r){return A.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;return{minX:(e=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:k(r))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}();return u.load(function(r){if(!r)throw new Error("geojson is required");var e=[];return _(r,(function(r){!function(r,e){var t=[],o=r.geometry;switch(o.type){case"Polygon":t=(0,h.r7)(o);break;case"LineString":t=[(0,h.r7)(o)]}t.forEach((function(t){(function(r,e){var t=[];return r.reduce((function(r,o){var i,a,s,u,h,l,c=(0,n.Tu)([r,o],e);return c.bbox=(a=o,s=(i=r)[0],u=i[1],[s<(h=a[0])?s:h,u<(l=a[1])?u:l,s>h?s:h,u>l?u:l]),t.push(c),o})),t})(t,r.properties).forEach((function(r){r.id=e.length,e.push(r)}))}))}(r,e)})),(0,n.uf)(e)}(r)),i=function(r){var e=!1;Y(u.search(r),(function(t){if(!1===e){var n=(0,h.r7)(r).sort(),i=(0,h.r7)(t).sort();fr(n,i)||(0===a?(0,hr.Z)(n[0],t)&&(0,hr.Z)(n[1],t):ur(t,n[0]).properties.dist<=a&&ur(t,n[1]).properties.dist<=a)?(e=!0,o=o?gr(o,r):r):(0===a?(0,hr.Z)(i[0],r)&&(0,hr.Z)(i[1],r):ur(r,i[0]).properties.dist<=a&&ur(r,i[1]).properties.dist<=a)&&(o=o?gr(o,t):t)}})),!1===e&&o&&(s.push(o),o=void 0)},_(e,(function(r,e,t){var o=0;if(r.geometry){var a,s=r.geometry.type;if("Point"!==s&&"MultiPoint"!==s)return!1!==X(r,(function(s,u,h,l,c){if(void 0!==a){var f=(0,n.Tu)([a,s],r.properties);if(!1===i(f,e,t,c,o))return!1;o++,a=s}else a=s}))&&void 0}})),o&&s.push(o),(0,n.uf)(s)};function yr(r,e,t,n,o){for(;n>t;){if(n-t>600){var i=n-t+1,a=e-t+1,s=Math.log(i),u=.5*Math.exp(2*s/3),h=.5*Math.sqrt(s*u*(i-u)/i)*(a-i/2<0?-1:1);yr(r,e,Math.max(t,Math.floor(e-a*u/i+h)),Math.min(n,Math.floor(e+(i-a)*u/i+h)),o)}var l=r[e],c=t,f=n;for(wr(r,t,e),o(r[n],l)>0&&wr(r,t,n);c<f;){for(wr(r,c,f),c++,f--;o(r[c],l)<0;)c++;for(;o(r[f],l)>0;)f--}0===o(r[t],l)?wr(r,t,f):wr(r,++f,n),f<=e&&(t=f+1),e<=f&&(n=f-1)}}function wr(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function vr(r,e){return r<e?-1:r>e?1:0}const br=function(r,e,t,n,o){yr(r,e,t||0,n||r.length-1,o||vr)};function xr(r,e){if(!(this instanceof xr))return new xr(r,e);this._maxEntries=Math.max(4,r||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function Mr(r,e,t){if(!t)return e.indexOf(r);for(var n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function Er(r,e){Pr(r,0,r.children.length,e,r)}function Pr(r,e,t,n,o){o||(o=kr(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<t;a++)i=r.children[a],Br(o,r.leaf?n(i):i);return o}function Br(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function Sr(r,e){return r.minX-e.minX}function Ar(r,e){return r.minY-e.minY}function Xr(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function Yr(r){return r.maxX-r.minX+(r.maxY-r.minY)}function _r(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function Fr(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function kr(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Cr(r,e,t,n,o){for(var i,a=[e,t];a.length;)(t=a.pop())-(e=a.pop())<=n||(i=e+Math.ceil((t-e)/n/2)*n,br(r,i,e,t,o),a.push(e,i,i,t))}xr.prototype={all:function(){return this._all(this.data,[])},search:function(r){var e=this.data,t=[],n=this.toBBox;if(!Fr(r,e))return t;for(var o,i,a,s,u=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],Fr(r,s=e.leaf?n(a):a)&&(e.leaf?t.push(a):_r(r,s)?this._all(a,t):u.push(a));e=u.pop()}return t},collides:function(r){var e=this.data,t=this.toBBox;if(!Fr(r,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],Fr(r,a=e.leaf?t(i):i)){if(e.leaf||_r(r,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(r){if(!r||!r.length)return this;if(r.length<this._minEntries){for(var e=0,t=r.length;e<t;e++)this.insert(r[e]);return this}var n=this._build(r.slice(),0,r.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(r){return r&&this._insert(r,this.data.height-1),this},clear:function(){return this.data=kr([]),this},remove:function(r,e){if(!r)return this;for(var t,n,o,i,a=this.data,s=this.toBBox(r),u=[],h=[];a||u.length;){if(a||(a=u.pop(),n=u[u.length-1],t=h.pop(),i=!0),a.leaf&&-1!==(o=Mr(r,a.children,e)))return a.children.splice(o,1),u.push(a),this._condense(u),this;i||a.leaf||!_r(a,s)?n?(t++,a=n.children[t],i=!1):a=null:(u.push(a),h.push(t),t=0,n=a,a=a.children[0])}return this},toBBox:function(r){return r},compareMinX:Sr,compareMinY:Ar,toJSON:function(){return this.data},fromJSON:function(r){return this.data=r,this},_all:function(r,e){for(var t=[];r;)r.leaf?e.push.apply(e,r.children):t.push.apply(t,r.children),r=t.pop();return e},_build:function(r,e,t,n){var o,i=t-e+1,a=this._maxEntries;if(i<=a)return Er(o=kr(r.slice(e,t+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,n-1))),(o=kr([])).leaf=!1,o.height=n;var s,u,h,l,c=Math.ceil(i/a),f=c*Math.ceil(Math.sqrt(a));for(Cr(r,e,t,f,this.compareMinX),s=e;s<=t;s+=f)for(Cr(r,s,h=Math.min(s+f-1,t),c,this.compareMinY),u=s;u<=h;u+=c)l=Math.min(u+c-1,h),o.children.push(this._build(r,u,l,n-1));return Er(o,this.toBBox),o},_chooseSubtree:function(r,e,t,n){for(var o,i,a,s,u,h,l,c,f,m;n.push(e),!e.leaf&&n.length-1!==t;){for(l=c=1/0,o=0,i=e.children.length;o<i;o++)u=Xr(a=e.children[o]),f=r,m=a,(h=(Math.max(m.maxX,f.maxX)-Math.min(m.minX,f.minX))*(Math.max(m.maxY,f.maxY)-Math.min(m.minY,f.minY))-u)<c?(c=h,l=u<l?u:l,s=a):h===c&&u<l&&(l=u,s=a);e=s||e.children[0]}return e},_insert:function(r,e,t){var n=this.toBBox,o=t?r:n(r),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(r),Br(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(r,e){var t=r[e],n=t.children.length,o=this._minEntries;this._chooseSplitAxis(t,o,n);var i=this._chooseSplitIndex(t,o,n),a=kr(t.children.splice(i,t.children.length-i));a.height=t.height,a.leaf=t.leaf,Er(t,this.toBBox),Er(a,this.toBBox),e?r[e-1].children.push(a):this._splitRoot(t,a)},_splitRoot:function(r,e){this.data=kr([r,e]),this.data.height=r.height+1,this.data.leaf=!1,Er(this.data,this.toBBox)},_chooseSplitIndex:function(r,e,t){var n,o,i,a,s,u,h,l,c,f,m,d,g,p;for(u=h=1/0,n=e;n<=t-e;n++)c=o=Pr(r,0,n,this.toBBox),f=i=Pr(r,n,t,this.toBBox),void 0,void 0,void 0,void 0,m=Math.max(c.minX,f.minX),d=Math.max(c.minY,f.minY),g=Math.min(c.maxX,f.maxX),p=Math.min(c.maxY,f.maxY),a=Math.max(0,g-m)*Math.max(0,p-d),s=Xr(o)+Xr(i),a<u?(u=a,l=n,h=s<h?s:h):a===u&&s<h&&(h=s,l=n);return l},_chooseSplitAxis:function(r,e,t){var n=r.leaf?this.compareMinX:Sr,o=r.leaf?this.compareMinY:Ar;this._allDistMargin(r,e,t,n)<this._allDistMargin(r,e,t,o)&&r.children.sort(n)},_allDistMargin:function(r,e,t,n){r.children.sort(n);var o,i,a=this.toBBox,s=Pr(r,0,e,a),u=Pr(r,t-e,t,a),h=Yr(s)+Yr(u);for(o=e;o<t-e;o++)i=r.children[o],Br(s,r.leaf?a(i):i),h+=Yr(s);for(o=t-e-1;o>=e;o--)i=r.children[o],Br(u,r.leaf?a(i):i),h+=Yr(u);return h},_adjustParentBBoxes:function(r,e,t){for(var n=t;n>=0;n--)Br(e[n],r)},_condense:function(r){for(var e,t=r.length-1;t>=0;t--)0===r[t].children.length?t>0?(e=r[t-1].children).splice(e.indexOf(r[t]),1):this.clear():Er(r[t],this.toBBox)},_initFormat:function(r){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(r[0])),this.compareMinY=new Function("a","b",e.join(r[1])),this.toBBox=new Function("a","return {minX: a"+r[0]+", minY: a"+r[1]+", maxX: a"+r[2]+", maxY: a"+r[3]+"};")}};const Lr=xr;function qr(r){var e=[r[0],r[1]],t=[r[0],r[3]],n=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[e,[r[2],r[1]],n,t,e]]}}}function Nr(r){var e=[1/0,1/0,-1/0,-1/0];return o(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}const jr=function(r){if(!r)throw new Error("geojson is required");var e=[];return s(r,(function(r){!function(r,e){var t=[],o=r.geometry;switch(o.type){case"Polygon":t=(0,h.r7)(o);break;case"LineString":t=[(0,h.r7)(o)]}t.forEach((function(t){(function(r,e){var t=[];return r.reduce((function(r,o){var i,a,s,u,h,l,c=(0,n.Tu)([r,o],e);return c.bbox=(a=o,s=(i=r)[0],u=i[1],[s<(h=a[0])?s:h,u<(l=a[1])?u:l,s>h?s:h,u>l?u:l]),t.push(c),o})),t})(t,r.properties).forEach((function(r){r.id=e.length,e.push(r)}))}))}(r,e)})),(0,n.uf)(e)};function Or(r,e){var t=(0,h.r7)(r),o=(0,h.r7)(e);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==o.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=t[0][0],a=t[0][1],s=t[1][0],u=t[1][1],l=o[0][0],c=o[0][1],f=o[1][0],m=o[1][1],d=(m-c)*(s-i)-(f-l)*(u-a);if(0===d)return null;var g=((f-l)*(a-c)-(m-c)*(i-l))/d,p=((s-i)*(a-c)-(u-a)*(i-l))/d;if(g>=0&&g<=1&&p>=0&&p<=1){var y=i+g*(s-i),w=a+g*(u-a);return(0,n.xm)([y,w])}return null}const Rr=function(r,e){var t={},o=[];if("LineString"===r.type&&(r=(0,n.zL)(r)),"LineString"===e.type&&(e=(0,n.zL)(e)),"Feature"===r.type&&"Feature"===e.type&&"LineString"===r.geometry.type&&"LineString"===e.geometry.type&&2===r.geometry.coordinates.length&&2===e.geometry.coordinates.length){var a=Or(r,e);return a&&o.push(a),(0,n.uf)(o)}var s=function(r){var e=Lr(r);return e.insert=function(r){if(Array.isArray(r)){var e=r;(r=qr(e)).bbox=e}else r.bbox=r.bbox?r.bbox:Nr(r);return Lr.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach((function(r){var t=qr(r);t.bbox=r,e.push(t)})):i(r,(function(r){r.bbox=r.bbox?r.bbox:Nr(r),e.push(r)})),Lr.prototype.load.call(this,e)},e.remove=function(r){if(Array.isArray(r)){var e=r;(r=qr(e)).bbox=e}return Lr.prototype.remove.call(this,r)},e.clear=function(){return Lr.prototype.clear.call(this)},e.search=function(r){return{type:"FeatureCollection",features:Lr.prototype.search.call(this,this.toBBox(r))}},e.collides=function(r){return Lr.prototype.collides.call(this,this.toBBox(r))},e.all=function(){return{type:"FeatureCollection",features:Lr.prototype.all.call(this)}},e.toJSON=function(){return Lr.prototype.toJSON.call(this)},e.fromJSON=function(r){return Lr.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;return{minX:(e=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:Nr(r))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}();return s.load(jr(e)),i(jr(r),(function(r){i(s.search(r),(function(e){var n=Or(r,e);if(n){var i=(0,h.r7)(n).join(",");t[i]||(t[i]=!0,o.push(n))}}))})),(0,n.uf)(o)};var Ir=t(29657),Tr=t.n(Ir);const Gr=function(r,e){if(!r)throw new Error("feature1 is required");if(!e)throw new Error("feature2 is required");var t=(0,h.oL)(r);if(t!==(0,h.oL)(e))throw new Error("features must be of the same type");if("Point"===t)throw new Error("Point geometry not supported");if(new(Tr())({precision:6}).compare(r,e))return!1;var n=0;switch(t){case"MultiPoint":var o=a(r),i=a(e);o.forEach((function(r){i.forEach((function(e){r[0]===e[0]&&r[1]===e[1]&&n++}))}));break;case"LineString":case"MultiLineString":u(r,(function(r){u(e,(function(e){pr(r,e).features.length&&n++}))}));break;case"Polygon":case"MultiPolygon":u(r,(function(r){u(e,(function(e){Rr(r,e).features.length&&n++}))}))}return n>0}},31662:(r,e,t)=>{"use strict";t.d(e,{Z:()=>a});var n=t(97363),o=t(29346);function i(r,e,t,n){var o=t[0],i=t[1],a=r[0],s=r[1],u=e[0],h=e[1],l=u-a,c=h-s;return 0==(t[0]-a)*c-(t[1]-s)*l&&(n?"start"===n?Math.abs(l)>=Math.abs(c)?l>0?a<o&&o<=u:u<=o&&o<a:c>0?s<i&&i<=h:h<=i&&i<s:"end"===n?Math.abs(l)>=Math.abs(c)?l>0?a<=o&&o<u:u<o&&o<=a:c>0?s<=i&&i<h:h<i&&i<=s:"both"===n?Math.abs(l)>=Math.abs(c)?l>0?a<o&&o<u:u<o&&o<a:c>0?s<i&&i<h:h<i&&i<s:void 0:Math.abs(l)>=Math.abs(c)?l>0?a<=o&&o<=u:u<=o&&o<=a:c>0?s<=i&&i<=h:h<=i&&i<=s)}const a=function(r,e,t){var a=(t=t||{}).ignoreEndVertices;if(!(0,o.Kn)(t))throw new Error("invalid options");if(!r)throw new Error("pt is required");if(!e)throw new Error("line is required");for(var s=(0,n.c9)(r),u=(0,n.r7)(e),h=0;h<u.length-1;h++){var l=!1;if(a&&(0===h&&(l="start"),h===u.length-2&&(l="end"),0===h&&h+1===u.length-1&&(l="both")),i(u[h],u[h+1],s,l))return!0}return!1}},68898:(r,e,t)=>{"use strict";var n=t(93737),o=t(41737);e.Z=function(r,e,t){void 0===t&&(t={});for(var i=t.steps||64,a=t.properties?t.properties:!Array.isArray(r)&&"Feature"===r.type&&r.properties?r.properties:{},s=[],u=0;u<i;u++)s.push(n.default(r,e,-360*u/i,t).geometry.coordinates);return s.push(s[0]),o.polygon([s],a)}},41737:(r,e)=>{"use strict";function t(r,e,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function n(r,e,n){if(void 0===n&&(n={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:r},e,n)}function o(r,e,n){void 0===n&&(n={});for(var o=0,i=r;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:r},e,n)}function i(r,e,n){if(void 0===n&&(n={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:r},e,n)}function a(r,e){void 0===e&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function s(r,e,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:r},e,n)}function u(r,e,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:r},e,n)}function h(r,e,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:r},e,n)}function l(r,t){void 0===t&&(t="kilometers");var n=e.factors[t];if(!n)throw new Error(t+" units is invalid");return r*n}function c(r,t){void 0===t&&(t="kilometers");var n=e.factors[t];if(!n)throw new Error(t+" units is invalid");return r/n}function f(r){return r%(2*Math.PI)*180/Math.PI}function m(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}Object.defineProperty(e,"__esModule",{value:!0}),e.earthRadius=6371008.8,e.factors={centimeters:100*e.earthRadius,centimetres:100*e.earthRadius,degrees:e.earthRadius/111325,feet:3.28084*e.earthRadius,inches:39.37*e.earthRadius,kilometers:e.earthRadius/1e3,kilometres:e.earthRadius/1e3,meters:e.earthRadius,metres:e.earthRadius,miles:e.earthRadius/1609.344,millimeters:1e3*e.earthRadius,millimetres:1e3*e.earthRadius,nauticalmiles:e.earthRadius/1852,radians:1,yards:e.earthRadius/1.0936},e.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e.earthRadius,yards:1/1.0936},e.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},e.feature=t,e.geometry=function(r,e,t){switch(void 0===t&&(t={}),r){case"Point":return n(e).geometry;case"LineString":return i(e).geometry;case"Polygon":return o(e).geometry;case"MultiPoint":return u(e).geometry;case"MultiLineString":return s(e).geometry;case"MultiPolygon":return h(e).geometry;default:throw new Error(r+" is invalid")}},e.point=n,e.points=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return n(r,e)})),t)},e.polygon=o,e.polygons=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return o(r,e)})),t)},e.lineString=i,e.lineStrings=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return i(r,e)})),t)},e.featureCollection=a,e.multiLineString=s,e.multiPoint=u,e.multiPolygon=h,e.geometryCollection=function(r,e,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:r},e,n)},e.round=function(r,e){if(void 0===e&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},e.radiansToLength=l,e.lengthToRadians=c,e.lengthToDegrees=function(r,e){return f(c(r,e))},e.bearingToAzimuth=function(r){var e=r%360;return e<0&&(e+=360),e},e.radiansToDegrees=f,e.degreesToRadians=function(r){return r%360*Math.PI/180},e.convertLength=function(r,e,t){if(void 0===e&&(e="kilometers"),void 0===t&&(t="kilometers"),!(r>=0))throw new Error("length must be a positive number");return l(c(r,e),t)},e.convertArea=function(r,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(r>=0))throw new Error("area must be a positive number");var o=e.areaFactors[t];if(!o)throw new Error("invalid original units");var i=e.areaFactors[n];if(!i)throw new Error("invalid final units");return r/o*i},e.isNumber=m,e.isObject=function(r){return!!r&&r.constructor===Object},e.validateBBox=function(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((function(r){if(!m(r))throw new Error("bbox must only contain numbers")}))},e.validateId=function(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}},93737:(r,e,t)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=t(17697),o=t(30411);e.default=function(r,e,t,i){void 0===i&&(i={});var a=o.getCoord(r),s=n.degreesToRadians(a[0]),u=n.degreesToRadians(a[1]),h=n.degreesToRadians(t),l=n.lengthToRadians(e,i.units),c=Math.asin(Math.sin(u)*Math.cos(l)+Math.cos(u)*Math.sin(l)*Math.cos(h)),f=s+Math.atan2(Math.sin(h)*Math.sin(l)*Math.cos(u),Math.cos(l)-Math.sin(u)*Math.sin(c)),m=n.radiansToDegrees(f),d=n.radiansToDegrees(c);return n.point([m,d],i.properties)}},17697:(r,e)=>{"use strict";function t(r,e,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function n(r,e,n){if(void 0===n&&(n={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:r},e,n)}function o(r,e,n){void 0===n&&(n={});for(var o=0,i=r;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:r},e,n)}function i(r,e,n){if(void 0===n&&(n={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:r},e,n)}function a(r,e){void 0===e&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function s(r,e,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:r},e,n)}function u(r,e,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:r},e,n)}function h(r,e,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:r},e,n)}function l(r,t){void 0===t&&(t="kilometers");var n=e.factors[t];if(!n)throw new Error(t+" units is invalid");return r*n}function c(r,t){void 0===t&&(t="kilometers");var n=e.factors[t];if(!n)throw new Error(t+" units is invalid");return r/n}function f(r){return r%(2*Math.PI)*180/Math.PI}function m(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}Object.defineProperty(e,"__esModule",{value:!0}),e.earthRadius=6371008.8,e.factors={centimeters:100*e.earthRadius,centimetres:100*e.earthRadius,degrees:e.earthRadius/111325,feet:3.28084*e.earthRadius,inches:39.37*e.earthRadius,kilometers:e.earthRadius/1e3,kilometres:e.earthRadius/1e3,meters:e.earthRadius,metres:e.earthRadius,miles:e.earthRadius/1609.344,millimeters:1e3*e.earthRadius,millimetres:1e3*e.earthRadius,nauticalmiles:e.earthRadius/1852,radians:1,yards:e.earthRadius/1.0936},e.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e.earthRadius,yards:1/1.0936},e.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},e.feature=t,e.geometry=function(r,e,t){switch(void 0===t&&(t={}),r){case"Point":return n(e).geometry;case"LineString":return i(e).geometry;case"Polygon":return o(e).geometry;case"MultiPoint":return u(e).geometry;case"MultiLineString":return s(e).geometry;case"MultiPolygon":return h(e).geometry;default:throw new Error(r+" is invalid")}},e.point=n,e.points=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return n(r,e)})),t)},e.polygon=o,e.polygons=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return o(r,e)})),t)},e.lineString=i,e.lineStrings=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return i(r,e)})),t)},e.featureCollection=a,e.multiLineString=s,e.multiPoint=u,e.multiPolygon=h,e.geometryCollection=function(r,e,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:r},e,n)},e.round=function(r,e){if(void 0===e&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},e.radiansToLength=l,e.lengthToRadians=c,e.lengthToDegrees=function(r,e){return f(c(r,e))},e.bearingToAzimuth=function(r){var e=r%360;return e<0&&(e+=360),e},e.radiansToDegrees=f,e.degreesToRadians=function(r){return r%360*Math.PI/180},e.convertLength=function(r,e,t){if(void 0===e&&(e="kilometers"),void 0===t&&(t="kilometers"),!(r>=0))throw new Error("length must be a positive number");return l(c(r,e),t)},e.convertArea=function(r,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(r>=0))throw new Error("area must be a positive number");var o=e.areaFactors[t];if(!o)throw new Error("invalid original units");var i=e.areaFactors[n];if(!i)throw new Error("invalid final units");return r/o*i},e.isNumber=m,e.isObject=function(r){return!!r&&r.constructor===Object},e.validateBBox=function(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((function(r){if(!m(r))throw new Error("bbox must only contain numbers")}))},e.validateId=function(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}},30411:(r,e,t)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=t(17697);e.getCoord=function(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if("Feature"===r.type&&null!==r.geometry&&"Point"===r.geometry.type)return r.geometry.coordinates;if("Point"===r.type)return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")},e.getCoords=function(r){if(Array.isArray(r))return r;if("Feature"===r.type){if(null!==r.geometry)return r.geometry.coordinates}else if(r.coordinates)return r.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},e.containsNumber=function r(e){if(e.length>1&&n.isNumber(e[0])&&n.isNumber(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return r(e[0]);throw new Error("coordinates must only contain numbers")},e.geojsonType=function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},e.featureOf=function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},e.collectionOf=function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,o=r.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+i.geometry.type)}},e.getGeom=function(r){return"Feature"===r.type?r.geometry:r},e.getType=function(r,e){return"FeatureCollection"===r.type?"FeatureCollection":"GeometryCollection"===r.type?"GeometryCollection":"Feature"===r.type&&null!==r.geometry?r.geometry.type:r.type}},7725:(r,e,t)=>{"use strict";t.d(e,{Z:()=>l});var n=t(97363),o=Math.PI/180,i=180/Math.PI,a=function(r,e){this.lon=r,this.lat=e,this.x=o*r,this.y=o*e};a.prototype.view=function(){return String(this.lon).slice(0,4)+","+String(this.lat).slice(0,4)},a.prototype.antipode=function(){var r=-1*this.lat,e=this.lon<0?180+this.lon:-1*(180-this.lon);return new a(e,r)};var s=function(){this.coords=[],this.length=0};s.prototype.move_to=function(r){this.length++,this.coords.push(r)};var u=function(r){this.properties=r||{},this.geometries=[]};u.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:"LineString",coordinates:null},type:"Feature",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:"LineString",coordinates:this.geometries[0].coords},type:"Feature",properties:this.properties};for(var r=[],e=0;e<this.geometries.length;e++)r.push(this.geometries[e].coords);return{geometry:{type:"MultiLineString",coordinates:r},type:"Feature",properties:this.properties}},u.prototype.wkt=function(){for(var r="",e="LINESTRING(",t=function(r){e+=r[0]+" "+r[1]+","},n=0;n<this.geometries.length;n++){if(0===this.geometries[n].coords.length)return"LINESTRING(empty)";this.geometries[n].coords.forEach(t),r+=e.substring(0,e.length-1)+")"}return r};var h=function(r,e,t){if(!r||void 0===r.x||void 0===r.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");if(!e||void 0===e.x||void 0===e.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");this.start=new a(r.x,r.y),this.end=new a(e.x,e.y),this.properties=t||{};var n=this.start.x-this.end.x,o=this.start.y-this.end.y,i=Math.pow(Math.sin(o/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(n/2),2);if(this.g=2*Math.asin(Math.sqrt(i)),this.g===Math.PI)throw new Error("it appears "+r.view()+" and "+e.view()+" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite");if(isNaN(this.g))throw new Error("could not calculate great circle between "+r+" and "+e)};h.prototype.interpolate=function(r){var e=Math.sin((1-r)*this.g)/Math.sin(this.g),t=Math.sin(r*this.g)/Math.sin(this.g),n=e*Math.cos(this.start.y)*Math.cos(this.start.x)+t*Math.cos(this.end.y)*Math.cos(this.end.x),o=e*Math.cos(this.start.y)*Math.sin(this.start.x)+t*Math.cos(this.end.y)*Math.sin(this.end.x),a=e*Math.sin(this.start.y)+t*Math.sin(this.end.y),s=i*Math.atan2(a,Math.sqrt(Math.pow(n,2)+Math.pow(o,2)));return[i*Math.atan2(o,n),s]},h.prototype.Arc=function(r,e){var t=[];if(!r||r<=2)t.push([this.start.lon,this.start.lat]),t.push([this.end.lon,this.end.lat]);else for(var n=1/(r-1),o=0;o<r;++o){var i=n*o,a=this.interpolate(i);t.push(a)}for(var h=!1,l=0,c=e&&e.offset?e.offset:10,f=180-c,m=-180+c,d=360-c,g=1;g<t.length;++g){var p=t[g-1][0],y=t[g][0],w=Math.abs(y-p);w>d&&(y>f&&p<m||p>f&&y<m)?h=!0:w>l&&(l=w)}var v=[];if(h&&l<c){var b=[];v.push(b);for(var x=0;x<t.length;++x){var M=parseFloat(t[x][0]);if(x>0&&Math.abs(M-t[x-1][0])>d){var E=parseFloat(t[x-1][0]),P=parseFloat(t[x-1][1]),B=parseFloat(t[x][0]),S=parseFloat(t[x][1]);if(E>-180&&E<m&&180===B&&x+1<t.length&&t[x-1][0]>-180&&t[x-1][0]<m){b.push([-180,t[x][1]]),x++,b.push([t[x][0],t[x][1]]);continue}if(E>f&&E<180&&-180===B&&x+1<t.length&&t[x-1][0]>f&&t[x-1][0]<180){b.push([180,t[x][1]]),x++,b.push([t[x][0],t[x][1]]);continue}if(E<m&&B>f){var A=E;E=B,B=A;var X=P;P=S,S=X}if(E>f&&B<m&&(B+=360),E<=180&&B>=180&&E<B){var Y=(180-E)/(B-E),_=Y*S+(1-Y)*P;b.push([t[x-1][0]>f?180:-180,_]),(b=[]).push([t[x-1][0]>f?-180:180,_]),v.push(b)}else b=[],v.push(b);b.push([M,t[x][1]])}else b.push([t[x][0],t[x][1]])}}else{var F=[];v.push(F);for(var k=0;k<t.length;++k)F.push([t[k][0],t[k][1]])}for(var C=new u(this.properties),L=0;L<v.length;++L){var q=new s;C.geometries.push(q);for(var N=v[L],j=0;j<N.length;++j)q.move_to(N[j])}return C};const l=function(r,e,t){if("object"!=typeof(t=t||{}))throw new Error("options is invalid");var o=t.properties,i=t.npoints,a=t.offset;return r=(0,n.c9)(r),e=(0,n.c9)(e),o=o||{},i=i||100,a=a||10,new h({x:r[0],y:r[1]},{x:e[0],y:e[1]},o).Arc(i,{offset:a}).json()}},29346:(r,e,t)=>{"use strict";t.d(e,{zL:()=>i,xm:()=>a,yu:()=>s,Tu:()=>u,uf:()=>h,DL:()=>l,lF:()=>c,vi:()=>f,Ht:()=>m,Kn:()=>g,jx:()=>p});var n=6371008.8,o={meters:n,metres:n,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:n/1852,inches:39.37*n,yards:5825721.287490856,feet:20902260.511392,radians:1,degrees:57.22891354143274};function i(r,e,t){if(!g(t=t||{}))throw new Error("options is invalid");var n=t.bbox,o=t.id;if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&p(n),o&&y(o);var i={type:"Feature"};return o&&(i.id=o),n&&(i.bbox=n),i.properties=e||{},i.geometry=r,i}function a(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(r[0])||!d(r[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:r},e,t)}function s(r,e,t){if(!r)throw new Error("coordinates is required");for(var n=0;n<r.length;n++){var o=r[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<o[o.length-1].length;a++){if(0===n&&0===a&&!d(o[0][0])||!d(o[0][1]))throw new Error("coordinates must contain numbers");if(o[o.length-1][a]!==o[0][a])throw new Error("First and last Position are not equivalent.")}}return i({type:"Polygon",coordinates:r},e,t)}function u(r,e,t){if(!r)throw new Error("coordinates is required");if(r.length<2)throw new Error("coordinates must be an array of two or more positions");if(!d(r[0][1])||!d(r[0][1]))throw new Error("coordinates must contain numbers");return i({type:"LineString",coordinates:r},e,t)}function h(r,e){if(!g(e=e||{}))throw new Error("options is invalid");var t=e.bbox,n=e.id;if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");t&&p(t),n&&y(n);var o={type:"FeatureCollection"};return n&&(o.id=n),t&&(o.bbox=t),o.features=r,o}function l(r,e){if(null==r)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=o[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r*t}function c(r,e){if(null==r)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=o[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function m(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180}function d(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function g(r){return!!r&&r.constructor===Object}function p(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((function(r){if(!d(r))throw new Error("bbox must only contain numbers")}))}function y(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}},97363:(r,e,t)=>{"use strict";function n(r){if(!r)throw new Error("coord is required");if("Feature"===r.type&&null!==r.geometry&&"Point"===r.geometry.type)return r.geometry.coordinates;if("Point"===r.type)return r.coordinates;if(Array.isArray(r)&&r.length>=2&&void 0===r[0].length&&void 0===r[1].length)return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function o(r){if(!r)throw new Error("coords is required");if("Feature"===r.type&&null!==r.geometry)return r.geometry.coordinates;if(r.coordinates)return r.coordinates;if(Array.isArray(r))return r;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function i(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}function a(r,e){if(!r)throw new Error((e||"geojson")+" is required");if(r.geometry&&r.geometry.type)return r.geometry.type;if(r.type)return r.type;throw new Error((e||"geojson")+" is invalid")}t.d(e,{c9:()=>n,r7:()=>o,wA:()=>i,oL:()=>a}),t(29346)},67703:(r,e,t)=>{var n=t(43648),o=t(45266),i=t(90809),a=t(8612).getCoords,s=t(51787),u=n.point,h=n.featureCollection,l=o.featureEach;function c(r,e){var t=a(r),n=a(e);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var o=t[0][0],i=t[0][1],s=t[1][0],h=t[1][1],l=n[0][0],c=n[0][1],f=n[1][0],m=n[1][1],d=(m-c)*(s-o)-(f-l)*(h-i);if(0===d)return null;var g=((f-l)*(i-c)-(m-c)*(o-l))/d,p=((s-o)*(i-c)-(h-i)*(o-l))/d;return g>=0&&g<=1&&p>=0&&p<=1?u([o+g*(s-o),i+g*(h-i)]):null}r.exports=function(r,e){var t=[];if("LineString"===r.geometry.type&&"LineString"===e.geometry.type&&2===r.geometry.coordinates.length&&2===e.geometry.coordinates.length){var n=c(r,e);return n&&t.push(n),h(t)}var o=s();return o.load(i(e)),l(i(r),(function(r){l(o.search(r),(function(e){var n=c(r,e);n&&t.push(n)}))})),h(t)}},43648:r=>{function e(r,e,t,n){if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");if(n&&-1===["string","number"].indexOf(typeof n))throw new Error("id must be a number or a string");var o={type:"Feature"};return n&&(o.id=n),t&&(o.bbox=t),o.properties=e||{},o.geometry=r,o}function t(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("Coordinates must contain numbers");return e({type:"Point",coordinates:r},t,n,o)}function n(r,t,n,o){if(!r)throw new Error("No coordinates passed");for(var i=0;i<r.length;i++){var a=r[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++){if(0===i&&0===s&&!m(a[0][0])||!m(a[0][1]))throw new Error("Coordinates must contain numbers");if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}}return e({type:"Polygon",coordinates:r},t,n,o)}function o(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!m(r[0][1])||!m(r[0][1]))throw new Error("Coordinates must contain numbers");return e({type:"LineString",coordinates:r},t,n,o)}function i(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiLineString",coordinates:r},t,n,o)}function a(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPoint",coordinates:r},t,n,o)}function s(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPolygon",coordinates:r},t,n,o)}var u={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},h={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:386e-9,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function l(r,e){if(null==r)throw new Error("radians is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r*t}function c(r,e){if(null==r)throw new Error("distance is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function m(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}r.exports={feature:e,geometry:function(r,e,u){if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(u&&4!==u.length)throw new Error("bbox must be an Array of 4 numbers");var h;switch(r){case"Point":h=t(e).geometry;break;case"LineString":h=o(e).geometry;break;case"Polygon":h=n(e).geometry;break;case"MultiPoint":h=a(e).geometry;break;case"MultiLineString":h=i(e).geometry;break;case"MultiPolygon":h=s(e).geometry;break;default:throw new Error(r+" is invalid")}return u&&(h.bbox=u),h},featureCollection:function(r,e,t){if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");if(e&&4!==e.length)throw new Error("bbox must be an Array of 4 numbers");if(t&&-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string");var n={type:"FeatureCollection"};return t&&(n.id=t),e&&(n.bbox=e),n.features=r,n},geometryCollection:function(r,t,n,o){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return e({type:"GeometryCollection",geometries:r},t,n,o)},point:t,multiPoint:a,lineString:o,multiLineString:i,polygon:n,multiPolygon:s,radiansToDistance:l,distanceToRadians:c,distanceToDegrees:function(r,e){return f(c(r,e))},radians2degrees:f,degrees2radians:function(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180},bearingToAngle:function(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e},convertDistance:function(r,e,t){if(null==r)throw new Error("distance is required");if(!(r>=0))throw new Error("distance must be a positive number");return l(c(r,e),t||"kilometers")},convertArea:function(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=h[e||"meters"];if(!n)throw new Error("invalid original units");var o=h[t||"kilometers"];if(!o)throw new Error("invalid final units");return r/n*o},round:function(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},isNumber:m}},8612:r=>{function e(r){if(!r)throw new Error("obj is required");var e;if(r.length?e=r:r.coordinates?e=r.coordinates:r.geometry&&r.geometry.coordinates&&(e=r.geometry.coordinates),e)return t(e),e;throw new Error("No valid coordinates")}function t(r){if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return!0;if(Array.isArray(r[0])&&r[0].length)return t(r[0]);throw new Error("coordinates must only contain numbers")}function n(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}r.exports={geojsonType:function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},collectionOf:function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0;n<r.features.length;n++){var o=r.features[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+o.geometry.type)}},featureOf:function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},getCoord:function(r){if(!r)throw new Error("obj is required");var t=e(r);if(t.length>1&&"number"==typeof t[0]&&"number"==typeof t[1])return t;throw new Error("Coordinate is not a valid Point")},getCoords:e,containsNumber:t,getGeom:n,getGeomType:function(r){if(!r)throw new Error("geojson is required");var e=n(r);if(e)return e.type}}},90809:(r,e,t)=>{var n=t(87139),o=t(38441).getCoords,i=t(45266).flattenEach,a=n.lineString,s=n.featureCollection;r.exports=function(r){if(!r)throw new Error("geojson is required");var e=[];return i(r,(function(r){!function(r,e){var t=[],n=r.geometry;switch(n.type){case"Polygon":t=o(n);break;case"LineString":t=[o(n)]}t.forEach((function(t){(function(r,e){var t=[];return r.reduce((function(r,n){var o,i,s,u,h,l,c=a([r,n],e);return c.bbox=(i=n,s=(o=r)[0],u=o[1],[s<(h=i[0])?s:h,u<(l=i[1])?u:l,s>h?s:h,u>l?u:l]),t.push(c),n})),t})(t,r.properties).forEach((function(r){r.id=e.length,e.push(r)}))}))}(r,e)})),s(e)}},87139:r=>{function e(r,e,t,n){if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");if(n&&-1===["string","number"].indexOf(typeof n))throw new Error("id must be a number or a string");var o={type:"Feature"};return n&&(o.id=n),t&&(o.bbox=t),o.properties=e||{},o.geometry=r,o}function t(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("Coordinates must contain numbers");return e({type:"Point",coordinates:r},t,n,o)}function n(r,t,n,o){if(!r)throw new Error("No coordinates passed");for(var i=0;i<r.length;i++){var a=r[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++){if(0===i&&0===s&&!m(a[0][0])||!m(a[0][1]))throw new Error("Coordinates must contain numbers");if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}}return e({type:"Polygon",coordinates:r},t,n,o)}function o(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!m(r[0][1])||!m(r[0][1]))throw new Error("Coordinates must contain numbers");return e({type:"LineString",coordinates:r},t,n,o)}function i(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiLineString",coordinates:r},t,n,o)}function a(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPoint",coordinates:r},t,n,o)}function s(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPolygon",coordinates:r},t,n,o)}var u={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},h={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:386e-9,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function l(r,e){if(null==r)throw new Error("radians is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r*t}function c(r,e){if(null==r)throw new Error("distance is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function m(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}r.exports={feature:e,geometry:function(r,e,u){if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(u&&4!==u.length)throw new Error("bbox must be an Array of 4 numbers");var h;switch(r){case"Point":h=t(e).geometry;break;case"LineString":h=o(e).geometry;break;case"Polygon":h=n(e).geometry;break;case"MultiPoint":h=a(e).geometry;break;case"MultiLineString":h=i(e).geometry;break;case"MultiPolygon":h=s(e).geometry;break;default:throw new Error(r+" is invalid")}return u&&(h.bbox=u),h},featureCollection:function(r,e,t){if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");if(e&&4!==e.length)throw new Error("bbox must be an Array of 4 numbers");if(t&&-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string");var n={type:"FeatureCollection"};return t&&(n.id=t),e&&(n.bbox=e),n.features=r,n},geometryCollection:function(r,t,n,o){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return e({type:"GeometryCollection",geometries:r},t,n,o)},point:t,multiPoint:a,lineString:o,multiLineString:i,polygon:n,multiPolygon:s,radiansToDistance:l,distanceToRadians:c,distanceToDegrees:function(r,e){return f(c(r,e))},radians2degrees:f,degrees2radians:function(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180},bearingToAngle:function(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e},convertDistance:function(r,e,t){if(null==r)throw new Error("distance is required");if(!(r>=0))throw new Error("distance must be a positive number");return l(c(r,e),t||"kilometers")},convertArea:function(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=h[e||"meters"];if(!n)throw new Error("invalid original units");var o=h[t||"kilometers"];if(!o)throw new Error("invalid final units");return r/n*o},round:function(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},isNumber:m}},38441:r=>{function e(r){if(!r)throw new Error("obj is required");var e;if(r.length?e=r:r.coordinates?e=r.coordinates:r.geometry&&r.geometry.coordinates&&(e=r.geometry.coordinates),e)return t(e),e;throw new Error("No valid coordinates")}function t(r){if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return!0;if(Array.isArray(r[0])&&r[0].length)return t(r[0]);throw new Error("coordinates must only contain numbers")}function n(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}r.exports={geojsonType:function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},collectionOf:function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0;n<r.features.length;n++){var o=r.features[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+o.geometry.type)}},featureOf:function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},getCoord:function(r){if(!r)throw new Error("obj is required");var t=e(r);if(t.length>1&&"number"==typeof t[0]&&"number"==typeof t[1])return t;throw new Error("Coordinate is not a valid Point")},getCoords:e,containsNumber:t,getGeom:n,getGeomType:function(r){if(!r)throw new Error("geojson is required");var e=n(r);if(e)return e.type}}},45266:(r,e,t)=>{"use strict";function n(r,e,t){if(null!==r){var o,i,a,s,u,h,l,c,f,m,d=0,g=0,p=r.type,y="FeatureCollection"===p,w="Feature"===p,v=y?r.features.length:1;for(o=0;o<v;o++)for(l=(m=!!(f=y?r.features[o].geometry:w?r.geometry:r)&&"GeometryCollection"===f.type)?f.geometries.length:1,i=0;i<l;i++){var b=0;if(null!==(h=m?f.geometries[i]:f)){c=h.coordinates;var x=h.type;switch(d=!t||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":e(c,g,o,b),g++,b++;break;case"LineString":case"MultiPoint":for(a=0;a<c.length;a++)e(c[a],g,o,b),g++,"MultiPoint"===x&&b++;"LineString"===x&&b++;break;case"Polygon":case"MultiLineString":for(a=0;a<c.length;a++){for(s=0;s<c[a].length-d;s++)e(c[a][s],g,o,b),g++;"MultiLineString"===x&&b++}"Polygon"===x&&b++;break;case"MultiPolygon":for(a=0;a<c.length;a++){for(s=0;s<c[a].length;s++)for(u=0;u<c[a][s].length-d;u++)e(c[a][s][u],g,o,b),g++;b++}break;case"GeometryCollection":for(a=0;a<h.geometries.length;a++)n(h.geometries[a],e,t);break;default:throw new Error("Unknown Geometry Type")}}}}}function o(r,e,t,o){var i=t;return n(r,(function(r,n,o,a){i=0===n&&void 0===t?r:e(i,r,n,o,a)}),o),i}function i(r,e){var t;switch(r.type){case"FeatureCollection":for(t=0;t<r.features.length;t++)e(r.features[t].properties,t);break;case"Feature":e(r.properties,0)}}function a(r,e,t){var n=t;return i(r,(function(r,o){n=0===o&&void 0===t?r:e(n,r,o)})),n}function s(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length;t++)e(r.features[t],t)}function u(r,e,t){var n=t;return s(r,(function(r,o){n=0===o&&void 0===t?r:e(n,r,o)})),n}function h(r){var e=[];return n(r,(function(r){e.push(r)})),e}function l(r,e){var t,n,o,i,a,s,u,h,l=0,c="FeatureCollection"===r.type,f="Feature"===r.type,m=c?r.features.length:1;for(t=0;t<m;t++){for(s=c?r.features[t].geometry:f?r.geometry:r,h=c?r.features[t].properties:f?r.properties:{},a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(i,l,h);break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)e(i.geometries[n],l,h);break;default:throw new Error("Unknown Geometry Type")}else e(null,l,h);l++}}function c(r,e,t){var n=t;return l(r,(function(r,o,i){n=0===o&&void 0===t?r:e(n,r,o,i)})),n}function f(r,e){l(r,(function(r,t,n){var o,i=null===r?null:r.type;switch(i){case null:case"Point":case"LineString":case"Polygon":return void e(p(r,n),t,0)}switch(i){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon"}r.coordinates.forEach((function(r,i){e(p({type:o,coordinates:r},n),t,i)}))}))}function m(r,e,t){var n=t;return f(r,(function(r,o,i){n=0===o&&0===i&&void 0===t?r:e(n,r,o,i)})),n}function d(r,e){f(r,(function(r,t,n){var i=0;if(r.geometry){var a=r.geometry.type;"Point"!==a&&"MultiPoint"!==a&&o(r,(function(o,a){var s=y([o,a],r.properties);return e(s,t,n,i),i++,a}))}}))}function g(r,e,t){var n=t,o=!1;return d(r,(function(r,i,a,s){n=!1===o&&void 0===t?r:e(n,r,i,a,s),o=!0})),n}function p(r,e){if(void 0===r)throw new Error("No geometry passed");return{type:"Feature",properties:e||{},geometry:r}}function y(r,e){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");return{type:"Feature",properties:e||{},geometry:{type:"LineString",coordinates:r}}}function w(r,e){if(!r)throw new Error("geojson is required");var t=r.geometry?r.geometry.type:r.type;if(!t)throw new Error("invalid geojson");if("FeatureCollection"===t)throw new Error("FeatureCollection is not supported");if("GeometryCollection"===t)throw new Error("GeometryCollection is not supported");var n=r.geometry?r.geometry.coordinates:r.coordinates;if(!n)throw new Error("geojson must contain coordinates");switch(t){case"LineString":return void e(n,0,0);case"Polygon":case"MultiLineString":for(var o=0,i=0;i<n.length;i++)"MultiLineString"===t&&(o=i),e(n[i],i,o);return;case"MultiPolygon":for(var a=0;a<n.length;a++)for(var s=0;s<n[a].length;s++)e(n[a][s],s,a);return;default:throw new Error(t+" geometry not supported")}}function v(r,e,t){var n=t;return w(r,(function(r,o,i){n=0===o&&void 0===t?r:e(n,r,o,i)})),n}t.r(e),t.d(e,{coordEach:()=>n,coordReduce:()=>o,propEach:()=>i,propReduce:()=>a,featureEach:()=>s,featureReduce:()=>u,coordAll:()=>h,geomEach:()=>l,geomReduce:()=>c,flattenEach:()=>f,flattenReduce:()=>m,segmentEach:()=>d,segmentReduce:()=>g,feature:()=>p,lineString:()=>y,lineEach:()=>w,lineReduce:()=>v})},73345:(r,e,t)=>{var n=t(70110).getCoords,o=t(44130),i=o.lineString,a=o.multiLineString,s=o.featureCollection;function u(r,e){return r.length>1?a(r,e):i(r[0],e)}r.exports=function(r){var e,t=(e=r).geometry?e.geometry.type:e.type,o=n(r),i=r.properties;if(!o.length)throw new Error("polygon must contain coordinates");switch(t){case"Polygon":return s([u(o,i)]);case"MultiPolygon":var a=[];return o.forEach((function(r){a.push(u(r,i))})),s(a);default:throw new Error("geom "+t+" not supported")}}},44130:r=>{function e(r,e,t,n){if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");if(n&&-1===["string","number"].indexOf(typeof n))throw new Error("id must be a number or a string");var o={type:"Feature"};return n&&(o.id=n),t&&(o.bbox=t),o.properties=e||{},o.geometry=r,o}function t(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("Coordinates must contain numbers");return e({type:"Point",coordinates:r},t,n,o)}function n(r,t,n,o){if(!r)throw new Error("No coordinates passed");for(var i=0;i<r.length;i++){var a=r[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++){if(0===i&&0===s&&!m(a[0][0])||!m(a[0][1]))throw new Error("Coordinates must contain numbers");if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}}return e({type:"Polygon",coordinates:r},t,n,o)}function o(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!m(r[0][1])||!m(r[0][1]))throw new Error("Coordinates must contain numbers");return e({type:"LineString",coordinates:r},t,n,o)}function i(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiLineString",coordinates:r},t,n,o)}function a(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPoint",coordinates:r},t,n,o)}function s(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPolygon",coordinates:r},t,n,o)}var u={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},h={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:386e-9,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function l(r,e){if(null==r)throw new Error("radians is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r*t}function c(r,e){if(null==r)throw new Error("distance is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function m(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}r.exports={feature:e,geometry:function(r,e,u){if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(u&&4!==u.length)throw new Error("bbox must be an Array of 4 numbers");var h;switch(r){case"Point":h=t(e).geometry;break;case"LineString":h=o(e).geometry;break;case"Polygon":h=n(e).geometry;break;case"MultiPoint":h=a(e).geometry;break;case"MultiLineString":h=i(e).geometry;break;case"MultiPolygon":h=s(e).geometry;break;default:throw new Error(r+" is invalid")}return u&&(h.bbox=u),h},featureCollection:function(r,e,t){if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");if(e&&4!==e.length)throw new Error("bbox must be an Array of 4 numbers");if(t&&-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string");var n={type:"FeatureCollection"};return t&&(n.id=t),e&&(n.bbox=e),n.features=r,n},geometryCollection:function(r,t,n,o){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return e({type:"GeometryCollection",geometries:r},t,n,o)},point:t,multiPoint:a,lineString:o,multiLineString:i,polygon:n,multiPolygon:s,radiansToDistance:l,distanceToRadians:c,distanceToDegrees:function(r,e){return f(c(r,e))},radians2degrees:f,degrees2radians:function(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180},bearingToAngle:function(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e},convertDistance:function(r,e,t){if(null==r)throw new Error("distance is required");if(!(r>=0))throw new Error("distance must be a positive number");return l(c(r,e),t||"kilometers")},convertArea:function(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=h[e||"meters"];if(!n)throw new Error("invalid original units");var o=h[t||"kilometers"];if(!o)throw new Error("invalid final units");return r/n*o},round:function(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},isNumber:m}},70110:r=>{function e(r){if(!r)throw new Error("obj is required");var e;if(r.length?e=r:r.coordinates?e=r.coordinates:r.geometry&&r.geometry.coordinates&&(e=r.geometry.coordinates),e)return t(e),e;throw new Error("No valid coordinates")}function t(r){if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return!0;if(Array.isArray(r[0])&&r[0].length)return t(r[0]);throw new Error("coordinates must only contain numbers")}function n(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}r.exports={geojsonType:function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},collectionOf:function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0;n<r.features.length;n++){var o=r.features[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+o.geometry.type)}},featureOf:function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},getCoord:function(r){if(!r)throw new Error("obj is required");var t=e(r);if(t.length>1&&"number"==typeof t[0]&&"number"==typeof t[1])return t;throw new Error("Coordinate is not a valid Point")},getCoords:e,containsNumber:t,getGeom:n,getGeomType:function(r){if(!r)throw new Error("geojson is required");var e=n(r);if(e)return e.type}}},29657:(r,e,t)=>{var n=t(10251),o=function(r){this.precision=r&&r.precision?r.precision:17,this.direction=!(!r||!r.direction)&&r.direction,this.pseudoNode=!(!r||!r.pseudoNode)&&r.pseudoNode,this.objectComparator=r&&r.objectComparator?r.objectComparator:s};function i(r){return r.coordinates.map((function(e){return{type:r.type.replace("Multi",""),coordinates:e}}))}function a(r,e){return r.hasOwnProperty("coordinates")?r.coordinates.length===e.coordinates.length:r.length===e.length}function s(r,e){return n(r,e,{strict:!0})}o.prototype.compare=function(r,e){if(r.type!==e.type||!a(r,e))return!1;switch(r.type){case"Point":return this.compareCoord(r.coordinates,e.coordinates);case"LineString":return this.compareLine(r.coordinates,e.coordinates,0,!1);case"Polygon":return this.comparePolygon(r,e);case"Feature":return this.compareFeature(r,e);default:if(0===r.type.indexOf("Multi")){var t=this,n=i(r),o=i(e);return n.every((function(r){return this.some((function(e){return t.compare(r,e)}))}),o)}}return!1},o.prototype.compareCoord=function(r,e){if(r.length!==e.length)return!1;for(var t=0;t<r.length;t++)if(r[t].toFixed(this.precision)!==e[t].toFixed(this.precision))return!1;return!0},o.prototype.compareLine=function(r,e,t,n){if(!a(r,e))return!1;var o=this.pseudoNode?r:this.removePseudo(r),i=this.pseudoNode?e:this.removePseudo(e);if(!n||this.compareCoord(o[0],i[0])||(i=this.fixStartIndex(i,o))){var s=this.compareCoord(o[t],i[t]);return this.direction||s?this.comparePath(o,i):!!this.compareCoord(o[t],i[i.length-(1+t)])&&this.comparePath(o.slice().reverse(),i)}},o.prototype.fixStartIndex=function(r,e){for(var t,n=-1,o=0;o<r.length;o++)if(this.compareCoord(r[o],e[0])){n=o;break}return n>=0&&(t=[].concat(r.slice(n,r.length),r.slice(1,n+1))),t},o.prototype.comparePath=function(r,e){var t=this;return r.every((function(r,e){return t.compareCoord(r,this[e])}),e)},o.prototype.comparePolygon=function(r,e){if(this.compareLine(r.coordinates[0],e.coordinates[0],1,!0)){var t=r.coordinates.slice(1,r.coordinates.length),n=e.coordinates.slice(1,e.coordinates.length),o=this;return t.every((function(r){return this.some((function(e){return o.compareLine(r,e,1,!0)}))}),n)}return!1},o.prototype.compareFeature=function(r,e){return!(r.id!==e.id||!this.objectComparator(r.properties,e.properties)||!this.compareBBox(r,e))&&this.compare(r.geometry,e.geometry)},o.prototype.compareBBox=function(r,e){return!!(!r.bbox&&!e.bbox||r.bbox&&e.bbox&&this.compareCoord(r.bbox,e.bbox))},o.prototype.removePseudo=function(r){return r},r.exports=o},51787:(r,e,t)=>{var n=t(65510),o=t(45266),i=o.featureEach,a=o.coordEach;function s(r){var e=[r[0],r[1]],t=[r[0],r[3]],n=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[e,[r[2],r[1]],n,t,e]]}}}function u(r){var e=[1/0,1/0,-1/0,-1/0];return a(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}r.exports=function(r){var e=n(r);return e.insert=function(r){if(Array.isArray(r)){var e=r;(r=s(e)).bbox=e}else r.bbox=r.bbox?r.bbox:u(r);return n.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach((function(r){var t=s(r);t.bbox=r,e.push(t)})):i(r,(function(r){r.bbox=r.bbox?r.bbox:u(r),e.push(r)})),n.prototype.load.call(this,e)},e.remove=function(r){if(Array.isArray(r)){var e=r;(r=s(e)).bbox=e}return n.prototype.remove.call(this,r)},e.clear=function(){return n.prototype.clear.call(this)},e.search=function(r){return{type:"FeatureCollection",features:n.prototype.search.call(this,this.toBBox(r))}},e.collides=function(r){return n.prototype.collides.call(this,this.toBBox(r))},e.all=function(){return{type:"FeatureCollection",features:n.prototype.all.call(this)}},e.toJSON=function(){return n.prototype.toJSON.call(this)},e.fromJSON=function(r){return n.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;return{minX:(e=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:u(r))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}},42348:(r,e,t)=>{var n=t(21078);r.exports=function(r){return null!=r&&r.length?n(r,1/0):[]}},12571:(r,e,t)=>{var n=t(14259),o=t(16612),i=t(40554);r.exports=function(r,e,t){var a=null==r?0:r.length;return a?(t&&"number"!=typeof t&&o(r,e,t)?(e=0,t=a):(e=null==e?0:i(e),t=void 0===t?a:i(t)),n(r,e,t)):[]}},68103:(r,e)=>{Number.prototype.toRad=function(){return this*Math.PI/180},e.Kl=function(r,e){var t,n=6378137,o=6356752.314245,i=1/298.257223563,a=r.latitude,s=r.longitude,u=e.latitude,h=(e.longitude-s).toRad(),l=Math.atan((1-i)*Math.tan(a.toRad())),c=Math.atan((1-i)*Math.tan(u.toRad())),f=Math.sin(l),m=Math.cos(l),d=Math.sin(c),g=Math.cos(c),p=h,y=100;do{var w=Math.sin(p),v=Math.cos(p),b=Math.sqrt(g*w*(g*w)+(m*d-f*g*v)*(m*d-f*g*v));if(0==b)return 0;var x=f*d+m*g*v,M=Math.atan2(b,x),E=m*g*w/b,P=1-E*E,B=x-2*f*d/P;isNaN(B)&&(B=0);var S=i/16*P*(4+i*(4-3*P));t=p,p=h+(1-S)*i*E*(M+S*b*(B+S*x*(2*B*B-1)))}while(Math.abs(p-t)>1e-12&&--y>0);if(0==y)return NaN;var A=P*(n*n-o*o)/(o*o),X=A/1024*(256+A*(A*(74-47*A)-128)),Y=o*(1+A/16384*(4096+A*(A*(320-175*A)-768)))*(M-X*b*(B+X/4*(x*(2*B*B-1)-X/6*B*(4*b*b-3)*(4*B*B-3))));return Y.toFixed(3)},e.e8=function(r,e){var t=r.latitude,n=r.longitude,o=e.latitude,i=e.longitude,a=(o-t).toRad(),s=(i-n).toRad(),u=Math.sin(a/2)*Math.sin(a/2)+Math.cos(t.toRad())*Math.cos(o.toRad())*Math.sin(s/2)*Math.sin(s/2);return(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u))*6371*1e3).toFixed(3)}},65510:(r,e,t)=>{"use strict";r.exports=o,r.exports.default=o;var n=t(84291);function o(r,e){if(!(this instanceof o))return new o(r,e);this._maxEntries=Math.max(4,r||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function i(r,e,t){if(!t)return e.indexOf(r);for(var n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function a(r,e){s(r,0,r.children.length,e,r)}function s(r,e,t,n,o){o||(o=g(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<t;a++)i=r.children[a],u(o,r.leaf?n(i):i);return o}function u(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function h(r,e){return r.minX-e.minX}function l(r,e){return r.minY-e.minY}function c(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function f(r){return r.maxX-r.minX+(r.maxY-r.minY)}function m(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function d(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function g(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function p(r,e,t,o,i){for(var a,s=[e,t];s.length;)(t=s.pop())-(e=s.pop())<=o||(a=e+Math.ceil((t-e)/o/2)*o,n(r,a,e,t,i),s.push(e,a,a,t))}o.prototype={all:function(){return this._all(this.data,[])},search:function(r){var e=this.data,t=[],n=this.toBBox;if(!d(r,e))return t;for(var o,i,a,s,u=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],d(r,s=e.leaf?n(a):a)&&(e.leaf?t.push(a):m(r,s)?this._all(a,t):u.push(a));e=u.pop()}return t},collides:function(r){var e=this.data,t=this.toBBox;if(!d(r,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],d(r,a=e.leaf?t(i):i)){if(e.leaf||m(r,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(r){if(!r||!r.length)return this;if(r.length<this._minEntries){for(var e=0,t=r.length;e<t;e++)this.insert(r[e]);return this}var n=this._build(r.slice(),0,r.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(r){return r&&this._insert(r,this.data.height-1),this},clear:function(){return this.data=g([]),this},remove:function(r,e){if(!r)return this;for(var t,n,o,a,s=this.data,u=this.toBBox(r),h=[],l=[];s||h.length;){if(s||(s=h.pop(),n=h[h.length-1],t=l.pop(),a=!0),s.leaf&&-1!==(o=i(r,s.children,e)))return s.children.splice(o,1),h.push(s),this._condense(h),this;a||s.leaf||!m(s,u)?n?(t++,s=n.children[t],a=!1):s=null:(h.push(s),l.push(t),t=0,n=s,s=s.children[0])}return this},toBBox:function(r){return r},compareMinX:h,compareMinY:l,toJSON:function(){return this.data},fromJSON:function(r){return this.data=r,this},_all:function(r,e){for(var t=[];r;)r.leaf?e.push.apply(e,r.children):t.push.apply(t,r.children),r=t.pop();return e},_build:function(r,e,t,n){var o,i=t-e+1,s=this._maxEntries;if(i<=s)return a(o=g(r.slice(e,t+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(s)),s=Math.ceil(i/Math.pow(s,n-1))),(o=g([])).leaf=!1,o.height=n;var u,h,l,c,f=Math.ceil(i/s),m=f*Math.ceil(Math.sqrt(s));for(p(r,e,t,m,this.compareMinX),u=e;u<=t;u+=m)for(p(r,u,l=Math.min(u+m-1,t),f,this.compareMinY),h=u;h<=l;h+=f)c=Math.min(h+f-1,l),o.children.push(this._build(r,h,c,n-1));return a(o,this.toBBox),o},_chooseSubtree:function(r,e,t,n){for(var o,i,a,s,u,h,l,f,m,d;n.push(e),!e.leaf&&n.length-1!==t;){for(l=f=1/0,o=0,i=e.children.length;o<i;o++)u=c(a=e.children[o]),m=r,d=a,(h=(Math.max(d.maxX,m.maxX)-Math.min(d.minX,m.minX))*(Math.max(d.maxY,m.maxY)-Math.min(d.minY,m.minY))-u)<f?(f=h,l=u<l?u:l,s=a):h===f&&u<l&&(l=u,s=a);e=s||e.children[0]}return e},_insert:function(r,e,t){var n=this.toBBox,o=t?r:n(r),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(r),u(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(r,e){var t=r[e],n=t.children.length,o=this._minEntries;this._chooseSplitAxis(t,o,n);var i=this._chooseSplitIndex(t,o,n),s=g(t.children.splice(i,t.children.length-i));s.height=t.height,s.leaf=t.leaf,a(t,this.toBBox),a(s,this.toBBox),e?r[e-1].children.push(s):this._splitRoot(t,s)},_splitRoot:function(r,e){this.data=g([r,e]),this.data.height=r.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},_chooseSplitIndex:function(r,e,t){var n,o,i,a,u,h,l,f,m,d,g,p,y,w;for(h=l=1/0,n=e;n<=t-e;n++)m=o=s(r,0,n,this.toBBox),d=i=s(r,n,t,this.toBBox),void 0,void 0,void 0,void 0,g=Math.max(m.minX,d.minX),p=Math.max(m.minY,d.minY),y=Math.min(m.maxX,d.maxX),w=Math.min(m.maxY,d.maxY),a=Math.max(0,y-g)*Math.max(0,w-p),u=c(o)+c(i),a<h?(h=a,f=n,l=u<l?u:l):a===h&&u<l&&(l=u,f=n);return f},_chooseSplitAxis:function(r,e,t){var n=r.leaf?this.compareMinX:h,o=r.leaf?this.compareMinY:l;this._allDistMargin(r,e,t,n)<this._allDistMargin(r,e,t,o)&&r.children.sort(n)},_allDistMargin:function(r,e,t,n){r.children.sort(n);var o,i,a=this.toBBox,h=s(r,0,e,a),l=s(r,t-e,t,a),c=f(h)+f(l);for(o=e;o<t-e;o++)i=r.children[o],u(h,r.leaf?a(i):i),c+=f(h);for(o=t-e-1;o>=e;o--)i=r.children[o],u(l,r.leaf?a(i):i),c+=f(l);return c},_adjustParentBBoxes:function(r,e,t){for(var n=t;n>=0;n--)u(e[n],r)},_condense:function(r){for(var e,t=r.length-1;t>=0;t--)0===r[t].children.length?t>0?(e=r[t-1].children).splice(e.indexOf(r[t]),1):this.clear():a(r[t],this.toBBox)},_initFormat:function(r){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(r[0])),this.compareMinY=new Function("a","b",e.join(r[1])),this.toBBox=new Function("a","return {minX: a"+r[0]+", minY: a"+r[1]+", maxX: a"+r[2]+", maxY: a"+r[3]+"};")}}},84291:function(r){r.exports=function(){"use strict";function r(t,n,o,i,a){for(;i>o;){if(i-o>600){var s=i-o+1,u=n-o+1,h=Math.log(s),l=.5*Math.exp(2*h/3),c=.5*Math.sqrt(h*l*(s-l)/s)*(u-s/2<0?-1:1);r(t,n,Math.max(o,Math.floor(n-u*l/s+c)),Math.min(i,Math.floor(n+(s-u)*l/s+c)),a)}var f=t[n],m=o,d=i;for(e(t,o,n),a(t[i],f)>0&&e(t,o,i);m<d;){for(e(t,m,d),m++,d--;a(t[m],f)<0;)m++;for(;a(t[d],f)>0;)d--}0===a(t[o],f)?e(t,o,d):e(t,++d,i),d<=n&&(o=d+1),n<=d&&(i=d-1)}}function e(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function t(r,e){return r<e?-1:r>e?1:0}return function(e,n,o,i,a){r(e,n,o||0,i||e.length-1,a||t)}}()},23384:r=>{var e=Array.isArray||function(r){return"[object Array]"===Object.prototype.toString.call(r)};r.exports=function(r,t){if(!e(r))throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");return{type:"Feature",geometry:{type:"Point",coordinates:r},properties:t||{}}}}}]);